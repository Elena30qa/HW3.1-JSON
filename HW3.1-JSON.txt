GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
 new...

 5. Клонировать репозиторий JSON на локальный компьютер.
 git clone https://github.com/Elena30qa/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "add new file"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 nano new.json
{
 "Name": "Kozlova Elena Viktorovna",
 "age": 38,
 "pets": 1,
 "desired salary": 2500
}
Ctrl O
Enter
Ctrl X

 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "add changes to file"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat >> preferences.json
{
 "favorite movie": "forsazh",
 "favourite TV show": "nevskiy",
 "favorite food": "ovoshchnoye ragu",
 "favorite time of year": "spring",
 "side you would like to visit": "baykal"
}
Enter
Ctrl C
 
14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat >> skills.json
{
 "skill1": "what is json",
 "skill2": "json structure",
 "skill3": "json object",
 "skill4": "json array"
}
Enter
Ctrl C

 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add two files"
git push

 16. На веб интерфейсе создать файл bug_report.json.
Add file > Create new file

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
"ID": 1568,
"Summary": "Нет выпадающего списка аудиофайлов при клике мышкой на вкладку 'Название аудиосказки'",
"Prodject": "Аудиосказки для детей от трех до семи лет",
"Version": "1.2.9",
"Severity": "высокая",
"Priority": "высокий",
"Status": "открытый",
"Author": "Елена",
"Executor": "Алексей",
"Actual result": "Не выбрать аудиосказку для прослушивания",
"Expected result": "должен выпадать список аудиосказок для прослушивания"
}

19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
git pull
